names(all_tables)=c("Level_1", "Level_2", "Level_3", "Level_4")
View(all_tables)
URLs=c("https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=04",
"https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=08",
"https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=06",
"https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=12")
test2=URLs %>% map(read_html)
View(test_list)
test2=URLs %>% map(read_html) %>% html_table(fill = TRUE)
test2=URLs %>% map(read_html) %>% map(html_table(fill = TRUE))
View(lpga_drivingstats)
View(lpga_puttavgs)
View(lpga_greensinreg)
names(all_tables)=c("Avg_Driving_Dist", "Avg_Putts", "Avg_Putts", "Avg_Score")
View(all_tables)
map_df(all_tables)
all_tables[]
all_tables=all_tables %>%
map_df(as_tibble) %>% # turn all list elements into tibbles
map_df(make_nice_data) # do some formatting on all tibbles
View(all_tables)
quick_read=function(url){
url=url %>% read_html(url) %>%
html_table(fill = TRUE)
}
test=quick_read("https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=04")
View(test)
test2=URLs %>% map(quick_read)
View(test2)
quick_read=function(url){
url=url %>% read_html(url) %>%
html_table(fill = TRUE)
}
test=quick_read("https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=04")
################################
html1=read_html("https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=04") %>%
html_table(fill = TRUE)
View(html1)
URLs=c("https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=04",
"https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=08",
"https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=06",
"https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=12")
#### DO FOR ALL ####
test2=URLs %>% map(quick_read)
View(test2)
test=test[[2]]
View(test)
test2 %>% map_df()
test2 %>% map_df(as_tibble)
as_tibble(test2)
as_tibble(test2[])
View(test2)
as_tibble(test2[[]])
as_tibble(test2[[1]])
as_tibble(test[[2]])
as_tibble(test[2])
test=quick_read("https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=04")
as_tibble(test[2])
as_tibble(test[[2]])
rm(test)
test=quick_read("https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=04") %>%
as_tibble(test[[2]])
test=quick_read("https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=04") %>%
as_tibble(test[2])
test=quick_read("https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=04")
# extract
table1=as_tibble(test[[2]])
as_tibble(test2[[]])
test2 %>% map_df(as_tibble)
View(test2)
as_tibble(test2[[4]])
test2[[4]]
test2[[4][[2]]]
extract_tibble=function(html_list){
html_list=as_tibble(html_list[[2]])
}
extract_tibble(html1)
extract_tibble=function(html_list){
df=as_tibble(html_list[[2]])
return(df)
}
extract_tibble(html1)
test2 %>% map(extract_tibble)
table1=extract_tibble(html1)
table1
#### 4. Format ####
table1=table1 %>%
select(-X1) %>%
rename("Name"="X2") %>%
slice(2:n())
head(table1)
# function
quick_read_html=function(url){
url=url %>% read_html(url) %>%
html_table(fill = TRUE) %>%
}
# function
quick_read_html=function(url){
url=url %>% read_html(url) %>%
html_table(fill = TRUE) %>%
}
# function
quick_read=function(url){
url=url %>% read_html(url) %>%
html_table(fill = TRUE) %>%
}
# function
quick_read_html=function(url){
url=url %>% read_html(url) %>%
html_table(fill = TRUE)
}
test_format=function(table){
table=table %>%
select(-X1) %>%
rename("Name"="X2") %>%
slice(2:n())
return(table)
}
table1=extract_tibble(html1)
head(table1)
test_format(table1)
test2 %>% map(extract_tibble)
test2=test2 %>% map(extract_tibble)
test2
test2 %>% map(test_format)
################ DO FOR ALL ######################
test2=URLs %>%
map(quick_read_html) %>%
map(extract_tibble) %>%
map(test_format)
View(test2)
df <- data.frame(matrix(unlist(l), nrow=132, byrow=TRUE),stringsAsFactors=FALSE)
df <- data.frame(matrix(unlist(test2), nrow=132, byrow=TRUE),stringsAsFactors=FALSE)
View(df)
test2 %>% map(as.data.frame)
test3=test2 %>% map(as.data.frame)
View(test3)
test3=test2[] %>% map(as.data.frame)
avg_drives=test2[[2]]
View(avg_drives)
View(df)
rm(test3)
rm(df)
View(test2)
?reduce
test2 %>% reduce(left_join, by="Name")
test3 %>% reduce(left_join, by="Name")
test3=test2 %>% reduce(left_join, by="Name")
View(test3)
lpga_data= tables_list %>% reduce(left_join, by="Name")
tables_list=URLs %>%
map(quick_read_html) %>%
map(extract_tibble) %>%
map(test_format)
lpga_data= tables_list %>% reduce(left_join, by="Name")
View(lpga_data)
View(html1)
html2=read_html("https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=08") %>%
html_table(fill = TRUE)
html4=read_html("https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=12") %>%
html_table(fill = TRUE)
View(html4)
html3=read_html("https://scores.nbcsports.com/golf/averages.asp?tour=LPGA&rank=06") %>%
html_table(fill = TRUE)
View(html3)
lpga_data= tables_list %>%
reduce(left_join, by="Name") %>% # Combine all individual list levels into a single tibble, matching by the Name column
rename("Avg_Drive"="X3.x", "Avg_Putts"="X3.y", "Rounds_Played"="X3.y.y" , "Avg_Score"="X4", "Greens_Hit"="X3.x.x")
head(lpga_data)
df <- tibble(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10),
d = rnorm(10)
)
output <- vector("double", ncol(df))  # 1.Output. Create the object you want the results of the loop stored in.
for (i in seq_along(df)) {            # 2.Sequence of operations. "For each item 'i' along data frame…"
output[[i]] <- median(df[[i]])      # 3.Body:"every individual item in 'output' = the median of each col in df
}
df <- tibble(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10),
d = rnorm(10)
)
output <- vector("double", ncol(df))  # 1.Output. Create the object you want the results of the loop stored in.
for (i in seq_along(df)) {            # 2.Sequence of operations. "For each item 'i' along data frame…"
output[[i]] <- median(df[[i]])      # 3.Body:"every individual item in 'output' = the median of each col in df
}
output
numbers=c(2,10,12,80)
sub_2=function(vector){
result=vector-2
return(result)
}
sub_2(numbers)
rainbow=tibble::tribble(~Color,
"red",
"orange",
"black",
"green",
"blue",
"purple")
rainbow[3]
rainbow$Color[3]
rainbow$Color[3] # access
rainbow$Color[3, "yellow"]
rainbow[3,Color]=
rainbow[3,Color]
rainbow[3,Color]
rainbow[3,"Color"]
rainbow[3, "Color"]= "yellow"
rainbow[3]
rainbow[3, "Color"]
rainbow
mtcars
library(tidyverse)
mtcars %>% as_tibble()
diamonds %>% as_tibble()
diamonds$cut=fct_recode("Fair"="meh", "Premium"="Wow", "Ideal"="Damn")
diamonds$cut=fct_recode(diamonds$cut, "Fair"="meh", "Premium"="Wow", "Ideal"="Damn")
diamonds$cut=fct_recode(diamonds$cut, "meh"="Fair", "Wow"="Premium")
diamonds
diamonds$cut
summary(diamonds$cut)
Titanic
iris
legaldmlab::pkmn
legaldmlab::pkmn %>% filter(str_detect(name, "Mewtwo"))
blah=tribble(~A, ~B,
"A","X",
"A","X")
blah=tribble(~A, ~B,
"A","X",
"A","X")
blah
blah$A=str_to_lower(blah$A)
blah
cat("The p-value dropped below 0.05 for the first time as sample size",which(p<0.05)[1]+10)
cat("The p-value dropped below 0.05 for the first time as sample size", 100)
flextable::as_grouped_data(x=mtcars, groups = c("cyl"))
test=flextable::as_grouped_data(x=mtcars, groups = c("cyl"))
View(test)
cars=mtcars
cars=rownames_to_column(mtcars, var = "Model")
test=flextable::as_grouped_data(x=cars, groups = c("cyl"))
test
ggplot(gapminder_2007, aes(x= gdpPerCap, y= lifeExp))+
geom_point()
ggplot(gapminder, aes(x= gdpPerCap, y= lifeExp))+
geom_point()
library(tidyverse)
diamonds
ggplot(diamonds, aes(x= cut, y= price))+
geom_point()
ggplot(diamonds, aes(x= carat, y= price))+
geom_point()
mtcars
ggplot(mtcars, aes(x= mpg, y=hp ))+
geom_point()
ggplot(mtcars, aes(x= mpg, y=hp, color=hp))+
geom_point()
ggplot(mtcars, aes(x= mpg, y=hp, color=mpg))+
geom_point()
ggplot(mtcars, aes(x= mpg, y=hp, color=mpg))+
geom_point()+
scale_fill_manual(values = c("red"))
library(gameofthrones)
ggplot(mtcars, aes(factor(cyl), fill=factor(vs)))+
geom_bar() +
scale_fill_got(discrete = TRUE, option = "Daenerys")
ggplot(mtcars, aes(factor(gear), fill=factor(carb)))+
geom_bar() +
scale_fill_got(discrete = TRUE, option = "Tully")
ggplot(mtcars, aes(x = mpg, y = disp, colour = hp))+
geom_point(size = 2) +
scale_colour_got(option = "Lannister")
ggplot(mtcars, aes(x= mpg, y=hp, color=mpg))+
geom_point()+
scale_color_manual(values = c("red"))
ggplot(mtcars, aes(x= mpg, y=hp, color=mpg))+
geom_point()+
scale_fill_manual(values = c("red"))
ggplot(mtcars, aes(x= mpg, y=hp, color=mpg))+
geom_point()+
scale_fill_manual(values = c("red", "green"))
ggplot(mtcars, aes(factor(cyl), fill=factor(vs)))+
geom_bar() +
scale_fill_got(discrete = TRUE, option = "Daenerys")
ggplot(mtcars, aes(x = mpg, y = disp, colour = hp))+
geom_point(size = 2) +
scale_colour_got(option = "Lannister")
ggplot(mtcars, aes(x= mpg, y=hp, color=mpg))+
geom_point()+
scale_color_brewer()
ggplot(mtcars, aes(x= mpg, y=hp, color=hp))+
geom_point()+
scale_color_brewer()
ggplot(mtcars, aes(x= mpg, y=hp, color=hp))+
geom_point()+
scale_color_discrete()
ggplot(mtcars, aes(x= mpg, y=hp, color=hp))+
geom_point()
ggplot(mtcars, aes(factor(gear), fill=factor(carb)))+
geom_bar() +
scale_fill_manual(values=c("green", "blue"))
ggplot(mtcars, aes(factor(gear), fill=factor(carb)))+
geom_bar() +
scale_fill_manual(values=c("green", "blue", "gray", "yellow", "gold", "black"))
ggplot(mtcars, aes(factor(gear), fill=factor(carb)))+
geom_bar() +
scale_fill_manual(values=c("green", "yellow", "orange", "red", "gold", "black"))
ggplot(mtcars, aes(factor(gear), fill=factor(carb)))+
geom_bar() +
scale_fill_manual(values=c("green", "yellow", "orange", "red", "purple", "blue"))
colors
colors()
?colors()
ggplot(mtcars, aes(factor(gear), fill=factor(carb)))+
geom_bar()
ggplot(mtcars, aes(factor(gear), fill=factor(carb)))+
geom_bar(color="black")
ggplot(mtcars, aes(factor(gear), fill=factor(carb), color="black"))+
geom_bar()
ggplot(mtcars, aes(factor(gear), fill=factor(carb)))+
geom_bar(color="black")
ggplot(mtcars, aes(x= mpg, y=hp, color=mpg))+
geom_point()
# add a color scale to the dots
ggplot(mtcars, aes(x= mpg, y=hp, color=mpg))+
geom_point()
# Visualize new groups
library(extrafont)
loadfonts(device="win")
ggplot(mtcars, aes(x=mpg))+
geom_bar(colour="white", fill="lightgreen")+
labs(title = "Ages of Survey Respondants by Group",
x="Age Group",
caption="Note. Younger= ages 11-29; Older= ages 30-86.")+
expand_limits(y=c(0,2000))+
theme(axis.title = element_text(face = "bold", family = "Courier New", size = 12),
axis.text = element_text(face = "italic"),
plot.caption = element_text(face = "italic", family = "Calibri", size = 9),
plot.title = element_text(face = "bold",size = 14, family = "Courier New"))+
theme(plot.title = element_text(hjust = 0.5))+
geom_text(stat='count', aes(label=..count..), vjust=-1)
ggplot(mtcars, aes(x=mpg))+
geom_bar(colour="white", fill="lightgreen")+
labs(title = "Ages of Survey Respondants by Group",
x="Age Group",
caption="Note. Younger= ages 11-29; Older= ages 30-86.")+
theme(axis.title = element_text(face = "bold", family = "Courier New", size = 12),
axis.text = element_text(face = "italic"),
plot.caption = element_text(face = "italic", family = "Calibri", size = 9),
plot.title = element_text(face = "bold",size = 14, family = "Courier New"))+
theme(plot.title = element_text(hjust = 0.5))+
geom_text(stat='count', aes(label=..count..), vjust=-1)
ggplot(mtcars, aes(x=mpg))+
geom_col(colour="gray", fill="lightgreen")+
labs(title = "Ages of Survey Respondants by Group",
x="Age Group",
caption="Note. Younger= ages 11-29; Older= ages 30-86.")+
theme(axis.title = element_text(face = "bold", family = "Courier New", size = 12),
axis.text = element_text(face = "italic"),
plot.caption = element_text(face = "italic", family = "Calibri", size = 9),
plot.title = element_text(face = "bold",size = 14, family = "Courier New"))+
theme(plot.title = element_text(hjust = 0.5))+
geom_text(stat='count', aes(label=..count..), vjust=-1)
ggplot(mtcars, aes(x=mpg))+
geom_bar(colour="gray", fill="lightgreen")+
labs(title = "Ages of Survey Respondants by Group",
x="Age Group",
caption="Note. Younger= ages 11-29; Older= ages 30-86.")+
theme(axis.title = element_text(face = "bold", family = "Courier New", size = 12),
axis.text = element_text(face = "italic"),
plot.caption = element_text(face = "italic", family = "Calibri", size = 9),
plot.title = element_text(face = "bold",size = 14, family = "Courier New"))+
theme(plot.title = element_text(hjust = 0.5))+
geom_text(stat='count', aes(label=..count..), vjust=-1)
ggplot(mtcars, aes(x=cyl))+
geom_bar(colour="gray", fill="lightgreen")+
labs(title = "Ages of Survey Respondants by Group",
x="Age Group",
caption="Note. Younger= ages 11-29; Older= ages 30-86.")+
theme(axis.title = element_text(face = "bold", family = "Courier New", size = 12),
axis.text = element_text(face = "italic"),
plot.caption = element_text(face = "italic", family = "Calibri", size = 9),
plot.title = element_text(face = "bold",size = 14, family = "Courier New"))+
theme(plot.title = element_text(hjust = 0.5))+
geom_text(stat='count', aes(label=..count..), vjust=-1)
ggplot(mtcars, aes(x=cyl))+
geom_bar(colour="gray", fill="lightgreen")+
labs(title = "Ages of Survey Respondants by Group",
x="Age Group",
caption="Note. Younger= ages 11-29; Older= ages 30-86.")
ggplot(mtcars, aes(x=cyl))+
geom_bar(colour="gray", fill="lightgreen")+
labs(title = "Ages of Survey Respondants by Group",
x="Age Group",
caption="Note. Younger= ages 11-29; Older= ages 30-86.")+
theme(axis.title = element_text(face = "bold", family = "Courier New", size = 12),
axis.text = element_text(face = "italic"),
plot.caption = element_text(face = "italic", family = "Calibri", size = 9),
plot.title = element_text(face = "bold",size = 14, family = "Courier New"))
ggplot(mtcars, aes(x=cyl))+
geom_bar(colour="gray", fill="lightgreen")+
labs(title = "Ages of Survey Respondants by Group",
x="Age Group",
caption="Note. Younger= ages 11-29; Older= ages 30-86.")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(mtcars, aes(x= mpg, y=hp))+
geom_point()+
ggrepel::geom_text_repel(data = class_data, aes(label = hp))+ # add data labels
gghighlight::gghighlight(hp > 200) # add highlights, according to some criteria
ggplot(mtcars, aes(x= mpg, y=hp))+
geom_point()+
ggrepel::geom_text_repel(data = mtcars, aes(label = hp))+ # add data labels
gghighlight::gghighlight(hp > 200) # add highlights, according to some criteria
ggplot(mtcars, aes(x= mpg, y=hp))+
geom_point()+
theme_classic()+
ggrepel::geom_text_repel(data = mtcars, aes(label = hp))+ # add data labels
gghighlight::gghighlight(hp > 200) # add highlights, according to some criteria
head(diamonds)
# Example that highlights specific string patterns in a vector of strings
ggplot(diamons, aes(x= cut, y= price, colour=price))+
geom_point()+
theme_classic()+
ggrepel::geom_text_repel(data = diamonds, aes(label = price))+ # this line labels
gghighlight::gghighlight(cut %in% c("Ideal", "Premium")) #this line highlights
# Example that highlights specific string patterns in a vector of strings
ggplot(diamonds, aes(x= cut, y= price, colour=price))+
geom_point()+
theme_classic()+
ggrepel::geom_text_repel(data = diamonds, aes(label = price))+ # this line labels
gghighlight::gghighlight(cut %in% c("Ideal", "Premium")) #this line highlights
head(mtcars)
cars=rownames_to_column(cars, var = "model")
cars
cars=mtcars
diamonds_abr=diamonds %>% slice(1:100)
ggplot(diamonds_abr, aes(x= cut, y= price, colour=price))+
geom_point()+
theme_classic()+
ggrepel::geom_text_repel(data = diamonds_abr, aes(label = price))+ # this line labels
gghighlight::gghighlight(cut %in% c("Ideal")) #this line highlights
ggplot(diamonds_abr, aes(x= cut, y= price, colour=price))+
geom_point()+
theme_classic()+
ggrepel::geom_text_repel(data = diamonds_abr, aes(label = price))+ # this line labels
gghighlight::gghighlight(cut %in% c("Very Good")) #this line highlights
ggplot(diamonds_abr, aes(x= cut, y= price, colour=price))+
geom_point()+
theme_classic()+
ggrepel::geom_text_repel(data = diamonds_abr, aes(label = price))+ # this line labels
gghighlight::gghighlight(cut %in% c("Very Good", "Ideal")) #this line highlights
ggplot(mtcars, aes(x= mpg, y=hp, color=mpg))+
geom_point()+
geom_smooth(method = "lm", formula = y ~ x)
ggplot(mtcars, aes(x= mpg, y=hp))+
geom_point()+
theme_classic()+
ggrepel::geom_text_repel(data = mtcars, aes(label = hp)) # add data labels (optional)
ggplot(mtcars, aes(x= mpg, y=hp))+
geom_point() + geom_text(aes(label=hp))
ggplot(mtcars, aes(x= mpg, y=hp))+
geom_point() + geom_text(aes(label=hp, hjust=0, vjust=1))
ggplot(mtcars, aes(x= mpg, y=hp))+
geom_point() + geom_text(aes(label=hp, hjust=0, vjust=10))
ggplot(mtcars, aes(x= mpg, y=hp))+
geom_point() + geom_text(aes(label=hp, hjust=2.5, vjust=2.5))
ggplot(mtcars, aes(x= mpg, y=hp))+
geom_point()+
theme_classic()+
ggrepel::geom_text_repel(data = mtcars, aes(label = hp))
theme(axis.title = element_text(face = "bold", family = "Courier New", size = 12),
axis.text = element_text(face = "italic"),
plot.caption = element_text(face = "italic", family = "Calibri", size = 9),
plot.title = element_text(face = "bold",size = 14, family = "Courier New"))+
theme(panel.grid = element_blank())
ggplot(mtcars, aes(x=cyl))+
geom_bar(colour="gray", fill="lightgreen")+
labs(title = "Ages of Survey Respondants by Group",
x="Age Group",
caption="Note. Younger= ages 11-29; Older= ages 30-86.")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(mtcars, aes(x=cyl))+
geom_bar(colour="gray", fill="lightgreen")+
labs(title = "Ages of Survey Respondants by Group",
x="Age Group",
caption="Note. Younger= ages 11-29; Older= ages 30-86.")+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.title = element_text(face = "bold", family = "Courier New", size = 12),
axis.text = element_text(face = "italic"),
plot.caption = element_text(face = "italic", family = "Calibri", size = 9),
plot.title = element_text(face = "bold",size = 14, family = "Courier New"))+
theme(panel.grid = element_blank())
nba
pkmn
legaldmlab::pkmn
ggplot(mtcars, aes(x=cyl))+
geom_bar(colour="gray", fill="lightgreen")+
labs(title = "Ages of Survey Respondants by Group",
x="Age Group",
caption="Note. Younger= ages 11-29; Older= ages 30-86.")+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.title = element_text(face = "bold", family = "Courier New", size = 12),
axis.text = element_text(face = "italic"),
plot.caption = element_text(face = "italic", family = "Calibri", size = 9),
plot.title = element_text(face = "bold",size = 14, family = "Courier New"))+
theme(panel.grid = element_blank())+
coord_cartesian(xlim = c(45,56))
